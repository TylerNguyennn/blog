
---
import BaseLayout from "@layouts/BaseLayout.astro";
import { getCollection } from "astro:content";

const allPosts = await getCollection("blog");
---

<BaseLayout title="Admin - Manage Articles" sideBarActiveItemID="admin">
  <div class="pb-12 mt-5">
    <div class="text-xl py-1">Article Management</div>
    <div class="text-5xl font-bold">Admin Dashboard</div>
    <div class="py-2">
      <text class="text-lg">
        Manage your blog articles - create, edit, and delete posts.
      </text>
    </div>
  </div>

  <div class="mb-6">
    <button id="create-new-btn" class="btn btn-primary">
      Create New Article
    </button>
  </div>

  <!-- Articles List -->
  <div class="space-y-4">
    {allPosts.map((post) => (
      <div class="card bg-base-100 shadow-md">
        <div class="card-body">
          <div class="flex justify-between items-start">
            <div>
              <h3 class="card-title">{post.data.title}</h3>
              <p class="text-gray-600">{post.data.description}</p>
              <p class="text-sm text-gray-500">
                Published: {post.data.pubDate.toLocaleDateString()}
              </p>
              {post.data.tags && (
                <div class="flex flex-wrap gap-1 mt-2">
                  {post.data.tags.map((tag) => (
                    <span class="badge badge-outline badge-sm">{tag}</span>
                  ))}
                </div>
              )}
            </div>
            <div class="flex gap-2">
              <button class="btn btn-sm btn-outline edit-btn" data-slug={post.slug}>
                Edit
              </button>
              <button class="btn btn-sm btn-error delete-btn" data-slug={post.slug}>
                Delete
              </button>
            </div>
          </div>
        </div>
      </div>
    ))}
  </div>

  <!-- Modal for Create/Edit -->
  <dialog id="article-modal" class="modal">
    <div class="modal-box w-11/12 max-w-4xl">
      <h3 id="modal-title" class="font-bold text-lg">Create New Article</h3>
      <form id="article-form" class="space-y-4 mt-4">
        <input type="hidden" id="article-slug" />
        
        <div class="form-control">
          <label class="label">
            <span class="label-text">Title</span>
          </label>
          <input type="text" id="article-title" class="input input-bordered" required />
        </div>

        <div class="form-control">
          <label class="label">
            <span class="label-text">Description</span>
          </label>
          <textarea id="article-description" class="textarea textarea-bordered" required></textarea>
        </div>

        <div class="form-control">
          <label class="label">
            <span class="label-text">Tags (comma separated)</span>
          </label>
          <input type="text" id="article-tags" class="input input-bordered" placeholder="tag1, tag2, tag3" />
        </div>

        <div class="form-control">
          <label class="label">
            <span class="label-text">Hero Image URL (optional)</span>
          </label>
          <input type="url" id="article-hero-image" class="input input-bordered" />
        </div>

        <div class="form-control">
          <label class="label">
            <span class="label-text">Badge (optional)</span>
          </label>
          <input type="text" id="article-badge" class="input input-bordered" />
        </div>

        <div class="form-control">
          <label class="label">
            <span class="label-text">Content</span>
          </label>
          <textarea id="article-content" class="textarea textarea-bordered h-64" required placeholder="Write your article content in Markdown..."></textarea>
        </div>

        <div class="modal-action">
          <button type="button" class="btn" onclick="document.getElementById('article-modal').close()">Cancel</button>
          <button type="submit" class="btn btn-primary">Save Article</button>
        </div>
      </form>
    </div>
  </dialog>

  <script>
    const modal = document.getElementById('article-modal');
    const form = document.getElementById('article-form');
    const modalTitle = document.getElementById('modal-title');
    
    // Create new article
    document.getElementById('create-new-btn').addEventListener('click', () => {
      modalTitle.textContent = 'Create New Article';
      form.reset();
      document.getElementById('article-slug').value = '';
      modal.showModal();
    });

    // Edit article
    document.querySelectorAll('.edit-btn').forEach(btn => {
      btn.addEventListener('click', async () => {
        const slug = btn.dataset.slug;
        modalTitle.textContent = 'Edit Article';
        
        try {
          const response = await fetch(`/api/articles/${slug}`);
          const article = await response.json();
          
          document.getElementById('article-slug').value = slug;
          document.getElementById('article-title').value = article.title;
          document.getElementById('article-description').value = article.description;
          document.getElementById('article-tags').value = article.tags ? article.tags.join(', ') : '';
          document.getElementById('article-hero-image').value = article.heroImage || '';
          document.getElementById('article-badge').value = article.badge || '';
          document.getElementById('article-content').value = article.content;
          
          modal.showModal();
        } catch (error) {
          alert('Error loading article: ' + error.message);
        }
      });
    });

    // Delete article
    document.querySelectorAll('.delete-btn').forEach(btn => {
      btn.addEventListener('click', async () => {
        const slug = btn.dataset.slug;
        
        if (confirm('Are you sure you want to delete this article?')) {
          try {
            const response = await fetch(`/api/articles/${slug}`, {
              method: 'DELETE'
            });
            
            if (response.ok) {
              location.reload();
            } else {
              alert('Error deleting article');
            }
          } catch (error) {
            alert('Error deleting article: ' + error.message);
          }
        }
      });
    });

    // Save article
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const slug = document.getElementById('article-slug').value;
      const isEdit = !!slug;
      
      const articleData = {
        title: document.getElementById('article-title').value,
        description: document.getElementById('article-description').value,
        tags: document.getElementById('article-tags').value.split(',').map(t => t.trim()).filter(t => t),
        heroImage: document.getElementById('article-hero-image').value,
        badge: document.getElementById('article-badge').value,
        content: document.getElementById('article-content').value
      };

      try {
        const url = isEdit ? `/api/articles/${slug}` : '/api/articles';
        const method = isEdit ? 'PUT' : 'POST';
        
        const response = await fetch(url, {
          method,
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(articleData)
        });

        if (response.ok) {
          location.reload();
        } else {
          const error = await response.json();
          alert('Error saving article: ' + error.message);
        }
      } catch (error) {
        alert('Error saving article: ' + error.message);
      }
    });
  </script>
</BaseLayout>
